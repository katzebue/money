name: CI

on: [push, pull_request]

env:
  PSALM_PHP_VERSION: "8.2"
  PSALM_DIR: "tools/psalm"
  COVERAGE_PHP_VERSION: "8.2"

jobs:
  coding-standards:
    name: Coding Standards
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          tools: composer-normalize

      - name: Validate composer.json
        run: composer validate --strict

      - name: Normalize composer.json
        run: composer-normalize --dry-run

      - name: PHP-CS-Fixer
        uses: docker://oskarstark/php-cs-fixer-ga
        with:
          args: --dry-run

  psalm:
    name: Psalm
    runs-on: ubuntu-latest

    if: ${{ false }}  # disable for now
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PSALM_PHP_VERSION }}

      - uses: "ramsey/composer-install@v2"
        with:
          working-directory: ${{ env.PSALM_DIR }}

      - name: Run Psalm
        run: ${{ env.PSALM_DIR }}/vendor/bin/psalm --show-info=false --find-unused-psalm-suppress --no-progress

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "8.2"
          - "8.3"
          - "8.4"
        deps:
          - "highest"
        include:
          - php-version: "8.2"
            deps: "lowest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov

      - name: Install composer dependencies
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: ${{ matrix.deps }}

      - name: Run PHPUnit
        run: vendor/bin/phpunit --fail-on-skipped
        if: ${{ matrix.php-version != env.COVERAGE_PHP_VERSION }}

      - name: Run PHPUnit with coverage
        run: |
          mkdir -p build/logs
          vendor/bin/phpunit --fail-on-skipped --coverage-clover build/logs/clover.xml
        if: ${{ matrix.php-version == env.COVERAGE_PHP_VERSION }}

      - name: Upload coverage report to Coveralls
        run: vendor/bin/php-coveralls --coverage_clover=build/logs/clover.xml -v
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ matrix.php-version == env.COVERAGE_PHP_VERSION }}
